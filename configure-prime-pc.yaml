---
#######################################################################
### ***        Prime PC Configuration - Playbook         ***  ###
#######################################################################


# ==================================================================================
# =====                     Play - Configure Prime PC                         ======
# ==================================================================================
#
- name: "Configure Prime PC"
  hosts:
    - all
  become: true
  gather_facts: true
  vars_files:
    - "./tasks/vault/vars-files/configuration-vars.yaml"
  vars:
    _folder_list: "{{ vault_folder_list }}"
    _lazygit_version: "{{ vault_lazygit_version }}"
    _lts_codename: "noble"
    _lube_logger_postgres_password: "{{ vault_lube_logger_postgres_password }}"
    _lube_logger_postgres_user: "{{ vault_lube_logger_postgres_user }}"
    _lube_logger_postgres_version: "{{ vault_lube_logger_postgres_version }}"
    _lube_logger_swag_cloudflare_api_token: "{{ vault_lube_logger_cloudflare_api_token }}"
    _lube_logger_swag_email_address: "{{ vault_lube_logger_email_address }}"
    _lube_logger_swag_tld: "{{ vault_lube_logger_tld }}"
    _lube_logger_version: "{{ vault_lube_logger_version }}"
    _should_deploy_swag_with_lube_logger: true
    _should_install_ansible_community_docker_collection_compatibility: true
    _should_install_lube_logger: "{{ _fact_should_install_lube_logger | default(false) | bool }}"
    _should_install_proton_mail_bridge: "{{ _fact_should_install_proton_mail_bridge | default(false) | bool }}"
    _should_install_virtualbox: true
    _should_replace_vim_command: true
    _timezone: "{{ vault_timezone }}"
    _username: "{{ vault_username }}"




  # ---------------------------------------------------------------------------
  # ---------                          Pre-Tasks                     ----------
  # ---------------------------------------------------------------------------

  pre_tasks:

    - name: "Set Timezone"
      community.general.timezone:
        name: "{{ _timezone }}"

    - name: "Display the Inventory File Path"
      ansible.builtin.debug:
        var: ansible_inventory_sources

    - name: "Display the \"hostname\" as defined in the Inventory File"
      ansible.builtin.debug:
        msg: "Inventery File Host: {{ ansible_hostname }}"

    - name: "Display the ACTUAL \"hostname\""
      ansible.builtin.debug:
        msg: "The ACTUAL \"hostname\": {{ ansible_facts.hostname }}"

    - name: "-------> RUN: Pre-task Configuration Tasks on a per-host basis"
      ansible.builtin.include_tasks: tasks/configuration-tasks.yaml
      vars:
        var_hostname: "{{ ansible_facts.hostname }}"

    - name: "-------> RUN: Enable snaps Tasks"
      ansible.builtin.include_tasks: tasks/enable-snaps.yaml


  # ---------------------------------------------------------------------------
  # ---------                          Roles                         ----------
  # ---------------------------------------------------------------------------

  roles:

    - name: "ROLE - Install Docker"
      role: "aaronvonawesome.install_docker"
      vars:
        var_docker_daemon_file: "install-docker_custom-docker-daemon.json"
        var_lts_codename: "{{ _lts_codename }}"
        var_should_install_ansible_community_docker_collection_compatibility: >
          {{ _should_install_ansible_community_docker_collection_compatibility }}
        var_user_list:
          - username: "{{ _username }}"


    # ======================     Desktop     ==================================

    - name: "ROLE - Install the Nextcloud Desktop Client"
      role: "aaronvonawesome.nextcloud_desktop_client"
      vars:
        var_lts_codename: "{{ _lts_codename }}"

    - name: "ROLE - Install OnlyKey App"
      role: "aaronvonawesome.onlykey_app"

    - name: "ROLE - Install Proton Suite"
      role: "aaronvonawesome.proton_suite"
      vars:
        var_proton_suite_should_install_proton_mail_bridge: "{{ _should_install_proton_mail_bridge }}"


    # ======================     Development     ==============================

    - name: "ROLE - Install Helix"
      role: "aaronvonawesome.helix"
      vars:
        var_lts_codename: "{{ _lts_codename }}"

    - name: "ROLE - Install Neovim"
      role: "aaronvonawesome.neovim"
      vars:
        var_lts_codename: "{{ _lts_codename }}"
        var_neovim_username: "{{ _username }}"
        var_neovim_should_replace_vim_command: "{{ _should_replace_vim_command }}"

    - name: "ROLE - Install Virtualbox + Vagrant"
      role: "aaronvonawesome.vagrant"
      vars:
        var_vagrant_username: "{{ _username }}"
        var_vagrant_should_install_virtualbox: "{{ _should_install_virtualbox }}"

    # ======================     Applications     ==============================

    - name: "ROLE - Install Lube Logger"
      role: "aaronvonawesome.lube_logger"
      vars:
        var_lube_logger_container_username: "{{ _username }}"
        var_lube_logger_state: "absent"
        # var_lube_logger_container_image_version: "{{ _lube_logger_version }}"
        # var_lube_logger_postgres_container_image_version: "{{ _lube_logger_postgres_version }}"
        # var_lube_logger_postgres_password: "{{ _lube_logger_postgres_password }}"
        # var_lube_logger_postgres_user: "{{ _lube_logger_postgres_user }}"
        # var_lube_logger_swag_cloudflare_api_token: "{{ _lube_logger_swag_cloudflare_api_token }}"
        # var_lube_logger_swag_email_address: "{{ _lube_logger_swag_email_address }}"
        # var_lube_logger_swag_tld: "{{ _lube_logger_swag_tld }}"
        # var_should_deploy_with_swag_container: "{{ _should_deploy_swag_with_lube_logger }}"
      when: _should_install_lube_logger




  # ---------------------------------------------------------------------------
  # ---------                          Tasks                         ----------
  # ---------------------------------------------------------------------------

  tasks:

    - name: "-------> RUN: Setup Default Folders"
      ansible.builtin.include_tasks: tasks/default-folders.yaml
      vars:
        var_username: "{{ _username }}"
        var_folder_list: "{{ _folder_list }}"

    - name: "-------> RUN: Base Packages Tasks"
      ansible.builtin.include_tasks: tasks/base-packages.yaml

    - name: "-------> RUN: Base Snap Packages Tasks"
      ansible.builtin.include_tasks: tasks/base-snaps.yaml

    # ======================     Desktop     ==================================

    - name: "-------> RUN: Desktop Packages Tasks"
      ansible.builtin.include_tasks: tasks/desktop-packages.yaml
      vars:
        var_lts_codename: "{{ _lts_codename }}"

    - name: "-------> RUN: Desktop Flatpaks Tasks"
      ansible.builtin.include_tasks: tasks/desktop-flatpaks.yaml


    # ======================     Development     ==============================

    - name: "-------> RUN: Development Packages Tasks"
      ansible.builtin.include_tasks: tasks/development-packages.yaml

    - name: "-------> RUN: Development Flatpaks Tasks"
      ansible.builtin.include_tasks: tasks/development-flatpaks.yaml

    - name: "-------> RUN: Development Snaps Tasks"
      ansible.builtin.include_tasks: tasks/development-snaps.yaml

    - name: "-------> RUN: Ansible Add-ons Pack Tasks"
      ansible.builtin.include_tasks: tasks/ansible-addons-pack.yaml
      vars:
        var_username: "{{ _username }}"

    - name: "BLOCK: Pluggero Roles"
      become: true
      vars:
        ansible_user: "{{ _username }}"
      block:

        - name: "Install lazygit"
          ansible.builtin.include_role:
            name: "pluggero.lazygit"
          vars:
            lazygit_version: "{{ _lazygit_version }}"

        - name: "Install nerdfonts"
          ansible.builtin.include_role:
            name: "pluggero.nerdfonts"
          vars:
            nerdfonts_font: "0xProto"


    # ======================     Communication     ============================

    - name: "-------> RUN: Communication Flatpaks Tasks"
      ansible.builtin.include_tasks: tasks/communication-flatpaks.yaml


    # ======================     LLM-Related      =============================

    - name: "-------> RUN: AI/LLM Flatpaks Tasks"
      ansible.builtin.include_tasks: tasks/ai-llm-flatpaks.yaml


    # ======================     Browsers     =================================

    - name: "-------> RUN: Browser Packages Tasks"
      ansible.builtin.include_tasks: tasks/browser-packages.yaml

    - name: "-------> RUN: Browser Flatpaks Tasks"
      ansible.builtin.include_tasks: tasks/browser-flatpaks.yaml

    - name: "-------> RUN: Browser Snaps Tasks"
      ansible.builtin.include_tasks: tasks/browser-snaps.yaml


    # ======================     Gaming      =============================

    - name: "-------> RUN: Gaming Flatpaks Tasks"
      ansible.builtin.include_tasks: tasks/gaming-flatpaks.yaml

    # ======================     Backup      =============================

    - name: "Install autorestic"
      ansible.builtin.include_role:
        name: "dbrennand.autorestic"


    # ======================     Bash Aliases    =============================

    - name: "-------> RUN: Lazydocker Alias Tasks"
      ansible.builtin.include_tasks: tasks/add-bashrc-alias-lazydocker.yaml
      vars:
        var_lazydocker_user: "{{ _username }}"

